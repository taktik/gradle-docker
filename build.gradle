
buildscript {
    repositories {
        jcenter()
        maven {
            credentials {
                username repoUsername
                password repoPassword
            }
            url = mavenRepository
        }
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:2.2.5'
        classpath 'com.taktik.gradle:gradle-plugin-maven-repository:1.0.0-SNAPSHOT'
    }
}

apply plugin: 'groovy'
apply plugin: 'maven-repository'

repositories {
    jcenter()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

sourceSets {
    integTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
        groovy {
            srcDir 'src/integTest/groovy'
        }
        resources {
            srcDir 'src/integTest/resources'
        }
    }
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.google.guava:guava:17.0'

    compile 'com.google.guava:guava:17.0'
    compile 'com.github.docker-java:docker-java:0.9.0'

    testCompile 'junit:junit-dep:4.11'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}

task integTest(type: Test) {
    group = 'verification'
    description = 'Runs the integration tests.'
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath

}

// run integration tests after unit tests if both are scheduled for execution
integTest.mustRunAfter test

check.dependsOn(integTest)